"use strict";var _createClass=function(){function r(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(n,e,t){return e&&r(n.prototype,e),t&&r(n,t),n}}();function _classCallCheck(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}var DBHelper=function(){function t(){_classCallCheck(this,t)}return _createClass(t,null,[{key:"openRestaurantsDB",value:function(){return navigator.serviceWorker?idb.open("restaurant-reviews-db",1,function(n){switch(n.oldVersion){case 0:var e=n.createObjectStore("restaurants",{keyPath:"id"});e.createIndex("by-name","name"),e.createIndex("by-date","createdAt"),e.createIndex("by-cuisine","cuisine_type"),e.createIndex("by-neighborhood","neighborhood")}}):(console.log("This browser doesn't support Service Worker"),Promise.resolve())}},{key:"fetchRestaurants",value:function(r){var e=this;fetch(t.DATABASE_URL).then(function(n){return n.json()}).then(function(t){e.openRestaurantsDB().then(function(n){var e=n.transaction("restaurants","readwrite").objectStore("restaurants");t.forEach(function(n){e.put(n)}),e.index("by-date").openCursor(null,"prev").then(function(n){return n.advance(10)}).then(function n(e){if(e)return e.delete(),e.continue().then(n)}),r(null,t)})}).catch(function(n){e.openRestaurantsDB().then(function(n){n.transaction("restaurants").objectStore("restaurants").getAll().then(function(n){r(null,n)}).catch(function(n){return r(n,null)})}).catch(function(n){return r(n,null)})})}},{key:"fetchRestaurantById",value:function(r,a){t.fetchRestaurants(function(n,e){if(n)a(n,null);else{var t=e.find(function(n){return n.id==r});t?a(null,t):a("Restaurant does not exist",null)}})}},{key:"fetchRestaurantByCuisine",value:function(r,a){t.fetchRestaurants(function(n,e){if(n)a(n,null);else{var t=e.filter(function(n){return n.cuisine_type==r});a(null,t)}})}},{key:"fetchRestaurantByNeighborhood",value:function(r,a){t.fetchRestaurants(function(n,e){if(n)a(n,null);else{var t=e.filter(function(n){return n.neighborhood==r});a(null,t)}})}},{key:"fetchRestaurantByCuisineAndNeighborhood",value:function(r,a,u){t.fetchRestaurants(function(n,e){if(n)u(n,null);else{var t=e;"all"!=r&&(t=t.filter(function(n){return n.cuisine_type==r})),"all"!=a&&(t=t.filter(function(n){return n.neighborhood==a})),u(null,t)}})}},{key:"fetchNeighborhoods",value:function(a){t.fetchRestaurants(function(n,t){if(n)a(n,null);else{var r=t.map(function(n,e){return t[e].neighborhood}),e=r.filter(function(n,e){return r.indexOf(n)==e});a(null,e)}})}},{key:"fetchCuisines",value:function(a){t.fetchRestaurants(function(n,t){if(n)a(n,null);else{var r=t.map(function(n,e){return t[e].cuisine_type}),e=r.filter(function(n,e){return r.indexOf(n)==e});a(null,e)}})}},{key:"urlForRestaurant",value:function(n){return"./restaurant?id="+n.id}},{key:"imageUrlForRestaurant",value:function(n){return null==n.photograph?"/img/missing-image":"/img/"+n.photograph}},{key:"mapMarkerForRestaurant",value:function(n,e){return new google.maps.Marker({position:n.latlng,title:n.name,url:t.urlForRestaurant(n),map:e,animation:google.maps.Animation.DROP})}},{key:"cleanImageCache",value:function(){return t.openRestaurantsDB().then(function(n){if(n){var a=[];return n.transaction("restaurants").objectStore("restaurants").getAll().then(function(n){return n.forEach(function(n){n.photograph&&a.push(n.photograph)}),caches.open("restaurant-reviews-content-imgs")}).then(function(r){return r.keys().then(function(n){n.forEach(function(n){var e=new URL(n.url),t=e.pathnames.substring(0,e.pathnames.indexOf("_"));a.includes(t)||r.delete(n)})})})}})}},{key:"DATABASE_URL",get:function(){return"http://localhost:1337/restaurants"}}]),t}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
